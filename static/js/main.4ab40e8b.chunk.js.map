{"version":3,"sources":["components/AppHeader/Header.module.css","assets/img/logo.svg","components/AppHeader/Header.jsx","assets/img/fav.svg","assets/img/nonfavorite.svg","API_STORAGE/api.js","redux/mainReducer.js","components/common/FormControls/FormControls.jsx","components/common/validators/validators.js","components/ContactDetail/ContactDetail.jsx","assets/img/email.svg","assets/img/internet.svg","assets/img/location.svg","assets/img/phone.svg","assets/img/sortASC.svg","assets/img/sortDESC.svg","components/Contacts/AppHeader.jsx","App.js","serviceWorker.js","index.js","components/ContactDetail/ContactDetail.module.css","components/Contacts/AppHeader.module.css","components/common/FormControls/FormControls.module.css"],"names":["module","exports","Header","className","styles","header","to","src","logo","alt","instance","axios","baseURL","initialState","users","favorites","setUsers","type","removeFavorite","favorite","setFavoritesFromLS","addToFavorites","dispatch","setFavorites","reducers","combineReducers","usersData","state","action","length","filter","item","id","form","formReducer","store","createStore","applyMiddleware","thunk","window","Input","input","meta","props","hasError","error","formControl","autoComplete","emailValid","value","test","phoneValid","ContactForms","reduxForm","post","formData","a","changedData","firstName","user","lastName","city","country","phoneNumber","email","website","updateUsers","push","sort","b","key","localStorage","setItem","JSON","stringify","contactForms","onSubmit","handleSubmit","inputBlock","inputTitle","Field","contactInput","name","component","placeholder","validate","saveContact","compose","withRouter","connect","useState","userId","setUserId","useEffect","parse","getItem","preventFavorites","useRef","current","match","params","some","contact","map","u","ContactDetail","imgBlock","image","photo","favIcon","nonfavIcon","onClick","UsersMapping","isFavorites","contactItem","textInfo","location","icon","locationIcon","number","smartphoneIcon","internetIcon","emailIcon","btnBlock","showUser","searchedUsers","setSearchedUsers","isFavoritesFilter","setFavoritesFilter","useReducer","x","forceUpdate","sortFunc","direction","sortedUsers","contactsBlock","actionBars","search","searchInput","onChange","e","fullName","fullNameReverse","toLowerCase","target","actionButtons","favoritesFilter","sortIconAZ","sortIconZA","contacts","App","React","memo","getUsers","exact","path","render","get","then","result","data","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4ab40e8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1s2iZ\",\"logo\":\"Header_logo__1LM3x\"};","export default __webpack_public_path__ + \"static/media/logo.3dc88ffd.svg\";","import React from 'react';\nimport styles from './Header.module.css'\nimport logo from '../../assets/img/logo.svg'\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className={styles.header}>\n            <div className=\"wrapper\">\n                <div className=\"logo\">\n                    <NavLink to='/'>\n                        <img src={ logo } alt=\"logo\"/>\n                    </NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/fav.fa53f179.svg\";","export default __webpack_public_path__ + \"static/media/nonfavorite.c89e8685.svg\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://my-json-server.typicode.com/RomanChasovitin/demo-api/'\n})\n\nexport const fetchUsersFromApi = () => instance.get('users');","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport thunk from \"redux-thunk\";\nimport { fetchUsersFromApi } from '../API_STORAGE/api'\n\nlet initialState = {\n    users: [],\n    favorites: []\n};\n\nexport const usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GET_USERS':  \n            return {\n                ...state,\n                users: action.users\n            }\n        case 'GET_FAVORITES': \n            return {\n                ...state,\n                favorites: [...state.favorites, action.favorite]\n            }\n        case 'REMOVE_FAVORITE':  \n            return {\n                ...state,\n                favorites: state.favorites.length > 1 ? state.favorites.filter(item => item.id !== action.favorite.id) : []\n            }\n        case 'SET_FAVORITES_FROM_LS': \n            return {\n                ...state,\n                favorites: [...action.favorites]\n            }\n        default: \n            return state;\n    }\n}\n\n// ACTIONS\nexport const setUsers = (users) => ({ type: 'GET_USERS', users });\nexport const setFavorites = (favorite) => ({ type: 'GET_FAVORITES', favorite })\nexport const removeFavorite = (favorite) => ({ type: 'REMOVE_FAVORITE', favorite })\nexport const setFavoritesFromLS = (favorites) => ({ type: 'SET_FAVORITES_FROM_LS', favorites })\n\nexport const getUsers = () => (dispatch) => {\n    fetchUsersFromApi()\n        .then(result => {\n            dispatch(setUsers(result.data.data));\n            localStorage.setItem('contacts', JSON.stringify(result.data.data))\n    })    \n};\n\nexport const addToFavorites = (favorite) => (dispatch) => {\n    dispatch(setFavorites(favorite));\n}; \n\nlet reducers = combineReducers({ \n    usersData: usersReducer,  \n    form: formReducer \n});\nlet store = createStore(reducers, applyMiddleware(thunk));\nwindow.store = store;\nexport default store;","import React from 'react'; \nimport styles from './FormControls.module.css';  \n\nexport const Input = ({ input, meta, ...props }) => { \n    const hasError = meta.error\n    return(\n        <div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\n            <div> <input type=\"text\" { ...input } { ...props } autoComplete=\"off\"/> </div>\n            { hasError && <span>{ meta.error }</span> } \n        </div>\n    )\n}","export const emailValid = (value) => { \n    if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(value) && !!value) {\n        return 'Проверьте правильность введенных данных'\n    }\n}\n \nexport const phoneValid = (value) => {\n    if(!/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/i.test(value) && !!value){\n        return 'Проверьте правильность введенных данных'\n    }\n};  \n ","import React, { useEffect, useState, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport styles from './ContactDetail.module.css'\nimport favIcon from '../../assets/img/fav.svg'\nimport nonfavIcon from '../../assets/img/nonfavorite.svg';\nimport { addToFavorites, removeFavorite, setUsers, setFavoritesFromLS } from '../../redux/mainReducer'\nimport { Input } from '../common/FormControls/FormControls';\nimport { emailValid, phoneValid } from '../common/validators/validators';\n\n\nconst ContactFormsF = (props) => { \n    const post = async (formData) => {\n        let changedData = { \n            firstName: formData.firstName || props.user.firstName,\n            lastName: formData.lastName || props.user.lastName ,\n            city: formData.city || props.user.city,\n            country: formData.country || props.user.country,\n            phoneNumber: formData.phoneNumber || props.user.phoneNumber,\n            email: formData.email || props.user.email,\n            website: formData.website || props.user.website\n        }   \n        let updateUsers = props.users.filter(item => item.id !== props.user.id)\n        updateUsers.push({...props.user, ...changedData});\n        updateUsers.sort((a, b) => a.id - b.id);\n        await props.setUsers(updateUsers)\n        localStorage.setItem('contacts', JSON.stringify(updateUsers)) \n        for(let key in formData){\n            formData[key] = ''\n        }\n    } \n    return (\n        <div className={ styles.contactForms }>\n            <form onSubmit={ props.handleSubmit(post) }>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>First Name:</p>\n                    <Field className={ styles.contactInput } name='firstName' component={ Input } type='text' placeholder={ props.user.firstName } />\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>Last name:</p>\n                    <Field className={ styles.contactInput } name='lastName' component={ Input } type='text' placeholder={ props.user.lastName } />\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>City:</p>\n                    <Field className={ styles.contactInput } name='city' component={ Input } type='text' placeholder={ props.user.city } />\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>Country:</p>\n                    <Field className={ styles.contactInput } name='country' component={ Input } type='text' placeholder={ props.user.country } />\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>Phone Number:</p>\n                    <Field className={ styles.contactInput } name='phoneNumber' component={ Input } type='text' placeholder={ props.user.phoneNumber } validate={ [phoneValid] } />\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>Email:</p>\n                    <Field className={ styles.contactInput } name='email' component={ Input } type='text' placeholder={ props.user.email } validate={ [emailValid] }/>\n                </div>\n                <div className={ styles.inputBlock }>\n                    <p className={ styles.inputTitle }>Website:</p>\n                    <Field className={ styles.contactInput } name='website' component={ Input } type='text' placeholder={ props.user.website } />\n                </div>\n                <button className={ styles.saveContact } >Save Contact</button>\n            </form>\n        </div>\n    )\n}\nconst ContactForms = reduxForm({ form: 'contactDetails' })(ContactFormsF)\n\nconst ContactDetail = (props) => {\n    const [userId, setUserId] = useState()\n\n    useEffect(() => { \n        if(!props.favorites.length && JSON.parse(localStorage.getItem('favorites')).length){\n            props.setFavoritesFromLS(JSON.parse(localStorage.getItem('favorites')))\n        } \n    }, [])\n\n    const preventFavorites = useRef()\n    preventFavorites.current = props.favorites\n\n    useEffect(() => { \n        setUserId(props.match.params.userId);   \n    }, [])\n \n\n    const setFavorites = async (user) => {   \n        if (!props.favorites.some(item => item.id === user.id)) {\n            await props.addToFavorites(user)\n        } else {\n            await props.removeFavorite(user)\n        }     \n        localStorage.setItem('favorites', JSON.stringify(preventFavorites.current))\n    }  \n    \n    return (\n        <div className={ styles.contact }>\n            { props.users.map(u => {\n                if(u.id === +userId){\n                    return (\n                        <div className={ styles.ContactDetail } key={ u.id } >\n                            <div className={ styles.imgBlock }>\n                                <img src={ u.image } alt=\"profile\" className={ styles.photo } />\n                                <img src={ (props.favorites.length && props.favorites.some(item => item.id === u.id)) ? favIcon : nonfavIcon } onClick={ () => setFavorites(u) } alt=\"fav\" className={ styles.favIcon }/>\n                            </div>\n                            \n                            <ContactForms user={ u } users={ props.users } setUsers={ props.setUsers } />\n\n                        </div>\n                    )\n                }\n            }) }\n        </div>\n    )\n}\n\nconst mstp = (state) => ({\n    users: state.usersData.users,\n    favorites: state.usersData.favorites\n})\n\nexport default  compose( \nwithRouter,\nconnect(mstp, { addToFavorites, removeFavorite, setUsers, setFavoritesFromLS })\n)(ContactDetail);","export default __webpack_public_path__ + \"static/media/email.f052d961.svg\";","export default __webpack_public_path__ + \"static/media/internet.6c063cec.svg\";","export default __webpack_public_path__ + \"static/media/location.894d4136.svg\";","export default __webpack_public_path__ + \"static/media/phone.e43acd22.svg\";","export default __webpack_public_path__ + \"static/media/sortASC.186c0b66.svg\";","export default __webpack_public_path__ + \"static/media/sortDESC.55fc2b08.svg\";","import React, { useState, useEffect, useRef, useReducer } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styles from './AppHeader.module.css';\nimport favIcon from '../../assets/img/fav.svg';\nimport nonfavIcon from '../../assets/img/nonfavorite.svg';\nimport emailIcon from '../../assets/img/email.svg';\nimport internetIcon from '../../assets/img/internet.svg';\nimport locationIcon from '../../assets/img/location.svg';\nimport smartphoneIcon from '../../assets/img/phone.svg';\nimport sortIconAZ from '../../assets/img/sortASC.svg';\nimport sortIconZA from '../../assets/img/sortDESC.svg';\nimport { addToFavorites, removeFavorite, setFavoritesFromLS, setUsers } from '../../redux/mainReducer';\n\n\nconst AppHeader = ({ users, favorites, setFavoritesFromLS, addToFavorites, removeFavorite, setUsers }) => {\n    const [searchedUsers, setSearchedUsers] = useState();\n    const [isFavoritesFilter, setFavoritesFilter] = useState(false);   \n\n    const preventFavorites = useRef();\n    preventFavorites.current = favorites;\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n \n    useEffect(() => { \n        if(!favorites.length && JSON.parse(localStorage.getItem('favorites')).length){\n            setFavoritesFromLS(JSON.parse(localStorage.getItem('favorites')))\n        } \n    }, [favorites, setFavoritesFromLS])\n    \n    const setFavorites = async (user) => {   \n        if (!favorites.some(item => item.id === user.id)) {\n            await addToFavorites(user)  \n        } else {\n            await removeFavorite(user)  \n        }     \n        localStorage.setItem('favorites', JSON.stringify(preventFavorites.current));\n    }  \n\n    const search = (e) => {\n        setSearchedUsers(users.filter(item => {\n            let fullName = item.firstName + ' ' + item.lastName;\n            let fullNameReverse = item.lastName + ' ' + item.firstName;\n            return fullName.toLowerCase().search(e.target.value.toLowerCase()) !== -1\n                || fullNameReverse.toLowerCase().search(e.target.value.toLowerCase()) !== -1\n        }))\n    }\n\n    const sortFunc = async (direction) => {   \n        let sortedUsers = await users.sort((a, b) => {\n            if(direction){\n                if (a.firstName < b.firstName) return -1;\n                if (b.firstName < a.firstName) return 1;\n            } else{ \n                if (a.firstName > b.firstName) return -1;\n                if (b.firstName > a.firstName) return 1;\n            } \n        })\n        setUsers(sortedUsers)\n        forceUpdate();\n    }\n\n\n    return (\n        <div className={ styles.contactsBlock }>\n\n            <div className={ styles.actionBars }>\n                <div className={ styles.search }>\n                    <input type=\"text\" className={ styles.searchInput } onChange={ (e) => search(e) } placeholder='type to search...' />\n                </div>\n                <div className={ styles.actionButtons}>\n                    <span className= { styles.favoritesFilter } onClick={ () => setFavoritesFilter(!isFavoritesFilter) } >\n                        <img src={ isFavoritesFilter ? favIcon : nonfavIcon } alt=\"Favorites\" />\n                    </span>\n                    <span onClick={ () => sortFunc(true) }><img src={ sortIconAZ } alt=\"az sort\"/></span>\n                    <span onClick={ () => sortFunc(false) }><img src={ sortIconZA } alt=\"za sort\"/></span> \n                </div>\n            </div>\n\n            <div className={ styles.contacts}>\n                { searchedUsers\n                    ? <UsersMapping users={ searchedUsers } setFavorites={ setFavorites } isFavorites={ isFavoritesFilter } favorites={ favorites } />\n                    : <UsersMapping users={ users } setFavorites={ setFavorites } isFavorites={ isFavoritesFilter } favorites={ favorites } />\n                }\n            </div>\n        </div>\n    )\n}\n\nconst UsersMapping = ({ users, setFavorites, isFavorites, favorites }) => {  \n    let forMapping = isFavorites ? favorites : users  \n    return forMapping.map(u => (\n        <div className={ styles.contactItem } key={ u.id } >\n            <div className={ styles.photo }><img src={ u.image } alt=\"profile\" /></div>\n            <div className={ styles.textInfo }>\n                <p className={ styles.name }>\n                    { u.firstName } { u.lastName }\n                    <span className={ styles.favorite } onClick={ () => setFavorites(u) } >\n                        <img src={ (favorites.length && favorites.some(item => item.id === u.id)) ? favIcon : nonfavIcon} alt=\"favorite\" />\n                    </span>\n                </p>\n                <p className={ styles.location }>\n                    <img className={ styles.icon } src={ locationIcon } alt=\"icon\" />\n                    { u.city } city, { u.country }\n                </p>\n                <p className={ styles.number }>\n                    <img className={ styles.icon } src={ smartphoneIcon } alt=\"icon\" />\n                    { u.phoneNumber }\n                </p>\n                <p className={ styles.website }>\n                    <img className={ styles.icon } src={ internetIcon } alt=\"icon\" />\n                    { u.website }\n                </p>\n                <p className={ styles.email }>\n                    <img className={ styles.icon } src={ emailIcon } alt=\"icon\" />\n                    { u.email }\n                </p>\n                <div className={ styles.btnBlock }>\n                    <NavLink to={`/contact/${ u.id }`} className={ styles.showUser }>Show</NavLink>\n                </div>\n            </div>\n        </div>\n    ))\n}\n\n\nconst mstp = (state) => ({\n    users: state.usersData.users,\n    favorites: state.usersData.favorites\n})\n\nexport default connect(mstp, { addToFavorites, removeFavorite, setFavoritesFromLS, setUsers })(AppHeader);","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/AppHeader/Header';\nimport ContactDetail from './components/ContactDetail/ContactDetail';\nimport Contacts from './components/Contacts/AppHeader';\nimport { getUsers, setUsers } from './redux/mainReducer';\nimport { Route } from 'react-router-dom'; \nimport { connect } from 'react-redux'; \n\nconst App = React.memo(({ setUsers, getUsers, users }) => {   \n    localStorage.getItem('favorites') == null && localStorage.setItem('favorites', JSON.stringify([]))\n\n    useEffect(() => {\n        let contacts = JSON.parse(localStorage.getItem('contacts'));\n        contacts ? setUsers(contacts) : getUsers()\n    }, [setUsers, getUsers]) \n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"main\">\n                <div className=\"wrapper\">\n                    <Route exact path='/' render={ () => <Contacts users={ users }/> } />\n                    <Route path='/contact/:userId' render={ () => <ContactDetail /> } />\n                </div>\n            </div>\n        </div>\n  );\n})\n\nconst mstp = (state) => ({\n    users: state.usersData.users,\n    favorites: state.usersData.favorites\n})\n\nexport default connect(mstp, { getUsers, setUsers })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';  \nimport { Provider } from 'react-redux';\nimport store from './redux/mainReducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgBlock\":\"ContactDetail_imgBlock__lPrXq\",\"photo\":\"ContactDetail_photo__14hsT\",\"favIcon\":\"ContactDetail_favIcon__3soRg\",\"contactForms\":\"ContactDetail_contactForms__2_84g\",\"contactInput\":\"ContactDetail_contactInput__1xNa3\",\"saveContact\":\"ContactDetail_saveContact__2MiRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"AppHeader_contacts__35R7t\",\"contactItem\":\"AppHeader_contactItem__-8kau\",\"textInfo\":\"AppHeader_textInfo__36BNf\",\"name\":\"AppHeader_name__1J3wb\",\"photo\":\"AppHeader_photo__2ydy5\",\"icon\":\"AppHeader_icon__3rkcU\",\"favorite\":\"AppHeader_favorite__12LWW\",\"btnBlock\":\"AppHeader_btnBlock__X2wX7\",\"showUser\":\"AppHeader_showUser__1FA9J\",\"actionBars\":\"AppHeader_actionBars__DNXi6\",\"search\":\"AppHeader_search__24yzo\",\"searchInput\":\"AppHeader_searchInput__Gc3Kg\",\"actionButtons\":\"AppHeader_actionButtons__13GEJ\",\"favoritesFilter\":\"AppHeader_favoritesFilter__32P6R\",\"sortBtn\":\"AppHeader_sortBtn__NGQJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__24y5C\"};"],"sourceRoot":""}